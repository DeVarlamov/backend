# Generated by Django 3.2.20 on 2023-10-27 13:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_company', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Компания',
                'verbose_name_plural': 'Компании',
                'ordering': ('name_company',),
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_education', models.CharField(error_messages={'unique': 'такой вид образования есть в бд'}, max_length=130, unique=True, verbose_name='Образование')),
                ('slug', models.SlugField(error_messages={'unique': 'такой slug уже есть'}, max_length=100, unique=True, verbose_name='Уникальный слаг вида образования')),
            ],
            options={
                'verbose_name': 'Образование',
                'verbose_name_plural': 'Образования',
                'ordering': ('name_education',),
            },
        ),
        migrations.CreateModel(
            name='Employment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_employment', models.CharField(error_messages={'unique': 'такой вид работы есть в бд'}, max_length=100, unique=True)),
                ('slug', models.SlugField(error_messages={'unique': 'такой slug уже есть'}, max_length=100, unique=True, verbose_name='Уникальный слаг вида работы')),
            ],
            options={
                'verbose_name': 'Тег занятости',
                'verbose_name_plural': 'Теги занятости',
                'ordering': ('name_employment',),
            },
        ),
        migrations.CreateModel(
            name='Hardskils',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'unique': 'такой хард скил уже есть в бд'}, max_length=100, unique=True, verbose_name='Название Тега')),
                ('slug', models.SlugField(error_messages={'unique': 'такой slug уже есть'}, max_length=100, unique=True, verbose_name='Уникальный Тег')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='JobExpiriense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jobexpiriense', models.CharField(error_messages={'unique': 'такой типа занятости есть в бд'}, max_length=130, unique=True, verbose_name='Образование')),
                ('slug', models.SlugField(error_messages={'unique': 'такой slug уже есть'}, max_length=100, unique=True, verbose_name='Уникальный слаг типа занятостия')),
            ],
            options={
                'verbose_name': 'Образование',
                'verbose_name_plural': 'Образования',
                'ordering': ('jobexpiriense',),
            },
        ),
        migrations.CreateModel(
            name='ProjectActivities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projectActivities', models.CharField(error_messages={'unique': 'такой типа занятости есть в бд'}, max_length=130, unique=True, verbose_name='Образование')),
                ('slug', models.SlugField(error_messages={'unique': 'такой slug уже есть'}, max_length=100, unique=True, verbose_name='Уникальный слаг типа занятостия')),
            ],
            options={
                'verbose_name': 'Образование',
                'verbose_name_plural': 'Образования',
                'ordering': ('projectActivities',),
            },
        ),
        migrations.CreateModel(
            name='SpecializationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specializationType', models.CharField(error_messages={'unique': 'такой типа занятости есть в бд'}, max_length=130, unique=True, verbose_name='Образование')),
                ('slug', models.SlugField(error_messages={'unique': 'такой slug уже есть'}, max_length=100, unique=True, verbose_name='Уникальный слаг типа занятостия')),
            ],
            options={
                'verbose_name': 'Образование',
                'verbose_name_plural': 'Образования',
                'ordering': ('specializationType',),
            },
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialty', models.CharField(error_messages={'unique': 'такой типа занятости есть в бд'}, max_length=130, unique=True, verbose_name='Образование')),
                ('slug', models.SlugField(error_messages={'unique': 'такой slug уже есть'}, max_length=100, unique=True, verbose_name='Уникальный слаг типа занятостия')),
            ],
            options={
                'verbose_name': 'Образование',
                'verbose_name_plural': 'Образования',
                'ordering': ('specialty',),
            },
        ),
        migrations.CreateModel(
            name='Vacancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateIns', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('city', models.CharField(max_length=120, verbose_name='Город')),
                ('description', models.TextField(help_text='напишите о вакансии', verbose_name='описание вакансии')),
                ('email', models.EmailField(max_length=254)),
                ('min_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('max_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('name', models.CharField(max_length=150, verbose_name='название вакансии')),
                ('phone', models.CharField(max_length=20)),
                ('author_vacancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company', to='app_hr.company', verbose_name='Автор вакансии')),
                ('education', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_hr.education', verbose_name='Образование')),
                ('employmentType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_hr.employment', verbose_name='Тип занятости')),
                ('jobexpiriense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_hr.jobexpiriense', verbose_name='опыт работы')),
                ('keyskils', models.ManyToManyField(to='app_hr.Hardskils', verbose_name='Харды')),
                ('projectActivities', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_hr.projectactivities', verbose_name='проектная активность')),
                ('specializationType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_hr.specializationtype', verbose_name='Тип специализации')),
                ('specialty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_hr.specialty', verbose_name='Cпециальность')),
            ],
            options={
                'verbose_name': 'Вакансия',
                'verbose_name_plural': 'Вакансии',
                'ordering': ('dateIns',),
            },
        ),
    ]
